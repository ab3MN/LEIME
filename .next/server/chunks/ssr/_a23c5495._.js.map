{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 44, "column": 0}, "map": {"version":3,"sources":["file://C%3A/ab3/New%20folder/LEIME/src/components/MemeItem/MemeItem.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const MemeItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call MemeItem() from the server but MemeItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/MemeItem/MemeItem.tsx <module evaluation>\",\n    \"MemeItem\",\n);\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/MemeItem/MemeItem.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/MemeItem/MemeItem.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,sEACA;uCAEW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAwS,GACrU,sEACA","debugId":null}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":["file://C%3A/ab3/New%20folder/LEIME/src/components/MemeItem/MemeItem.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const MemeItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call MemeItem() from the server but MemeItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/MemeItem/MemeItem.tsx\",\n    \"MemeItem\",\n);\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/MemeItem/MemeItem.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/MemeItem/MemeItem.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,kDACA;uCAEW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAoR,GACjT,kDACA","debugId":null}},
    {"offset": {"line": 80, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 90, "column": 0}, "map": {"version":3,"sources":["file://C%3A/ab3/New%20folder/LEIME/src/graphql/client.ts"],"sourcesContent":["import { ApolloClient, InMemoryCache } from '@apollo/client';\r\n\r\nconst client = new ApolloClient({\r\n  uri: `${process.env.HOST}/api/graphql`,\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nexport default client;\r\n"],"names":[],"mappings":";;;AAAA;AAAA;;AAEA,MAAM,SAAS,IAAI,0KAAA,CAAA,eAAY,CAAC;IAC9B,KAAK,GAAG,QAAQ,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;IACtC,OAAO,IAAI,wKAAA,CAAA,gBAAa;AAC1B;uCAEe","debugId":null}},
    {"offset": {"line": 107, "column": 0}, "map": {"version":3,"sources":["file://C%3A/ab3/New%20folder/LEIME/src/graphql/meme/fragments.ts"],"sourcesContent":["import { gql } from '@apollo/client';\r\n\r\nexport const MEME_FRAGMENT = gql`\r\n  fragment MemeFragment on Meme {\r\n    id\r\n    title\r\n    imgUrl\r\n    likes\r\n    timestamp\r\n  }\r\n`;\r\n"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,gBAAgB,8IAAA,CAAA,MAAG,CAAC;;;;;;;;AAQjC,CAAC","debugId":null}},
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":["file://C%3A/ab3/New%20folder/LEIME/src/graphql/meme/queries.ts"],"sourcesContent":["import { gql } from '@apollo/client';\r\nimport { MEME_FRAGMENT } from './fragments';\r\n\r\nexport const GET_MEMES = gql`\r\n  query GetMemes {\r\n    memes {\r\n      ...MemeFragment\r\n    }\r\n  }\r\n  ${MEME_FRAGMENT}\r\n`;\r\n\r\nexport const GET_MEME = gql`\r\n  query GetMeme($id: ID!) {\r\n    meme(id: $id) {\r\n      ...MemeFragment\r\n    }\r\n  }\r\n  ${MEME_FRAGMENT}\r\n`;\r\n\r\nexport const UPDATE_MEME = gql`\r\n  mutation UpdateMeme($id: ID!, $data: MemeInput!) {\r\n    updateMeme(id: $id, data: $data) {\r\n      ...MemeFragment\r\n    }\r\n  }\r\n  ${MEME_FRAGMENT}\r\n`;\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;;;AAEO,MAAM,YAAY,8IAAA,CAAA,MAAG,CAAC;;;;;;EAM3B,EAAE,mIAAA,CAAA,gBAAa,CAAC;AAClB,CAAC;AAEM,MAAM,WAAW,8IAAA,CAAA,MAAG,CAAC;;;;;;EAM1B,EAAE,mIAAA,CAAA,gBAAa,CAAC;AAClB,CAAC;AAEM,MAAM,cAAc,8IAAA,CAAA,MAAG,CAAC;;;;;;EAM7B,EAAE,mIAAA,CAAA,gBAAa,CAAC;AAClB,CAAC","debugId":null}},
    {"offset": {"line": 166, "column": 0}, "map": {"version":3,"sources":["file://C%3A/ab3/New%20folder/LEIME/src/graphql/meme/api.ts"],"sourcesContent":["import client from '../client';\r\nimport { Meme } from 'types/meme.type';\r\nimport { GET_MEME, GET_MEMES, UPDATE_MEME } from './queries';\r\n\r\nexport const getMemes = async () => {\r\n  const res = await client.query<{ memes: Meme[] }>({\r\n    query: GET_MEMES,\r\n  });\r\n\r\n  return res.data.memes;\r\n};\r\n\r\nexport const getMeme = async (id: string) => {\r\n  const res = await client.query<{ meme: Meme }>({\r\n    query: GET_MEME,\r\n    variables: { id },\r\n  });\r\n\r\n  return res.data.meme;\r\n};\r\n\r\nexport const updateMeme = async (id: string, meme: Omit<Meme, 'timestamp' | 'id'>) => {\r\n  const res = await client.mutate({\r\n    mutation: UPDATE_MEME,\r\n    variables: { id, data: meme },\r\n  });\r\n\r\n  return res.data.updateMeme;\r\n};\r\n"],"names":[],"mappings":";;;;;AAAA;AAEA;;;AAEO,MAAM,WAAW;IACtB,MAAM,MAAM,MAAM,wHAAA,CAAA,UAAM,CAAC,KAAK,CAAoB;QAChD,OAAO,iIAAA,CAAA,YAAS;IAClB;IAEA,OAAO,IAAI,IAAI,CAAC,KAAK;AACvB;AAEO,MAAM,UAAU,OAAO;IAC5B,MAAM,MAAM,MAAM,wHAAA,CAAA,UAAM,CAAC,KAAK,CAAiB;QAC7C,OAAO,iIAAA,CAAA,WAAQ;QACf,WAAW;YAAE;QAAG;IAClB;IAEA,OAAO,IAAI,IAAI,CAAC,IAAI;AACtB;AAEO,MAAM,aAAa,OAAO,IAAY;IAC3C,MAAM,MAAM,MAAM,wHAAA,CAAA,UAAM,CAAC,MAAM,CAAC;QAC9B,UAAU,iIAAA,CAAA,cAAW;QACrB,WAAW;YAAE;YAAI,MAAM;QAAK;IAC9B;IAEA,OAAO,IAAI,IAAI,CAAC,UAAU;AAC5B","debugId":null}},
    {"offset": {"line": 206, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 227, "column": 0}, "map": {"version":3,"sources":["file://C%3A/ab3/New%20folder/LEIME/src/app/list/%5Bid%5D/page.tsx"],"sourcesContent":["import MemeItem from '@components/MemeItem/MemeItem';\r\nimport { getMeme } from '@graphql/meme';\r\nimport { Params } from 'next/dist/server/request/params';\r\n\r\nexport const dynamicParams = true;\r\n\r\nexport default async function Page({ params }: { params: Params }) {\r\n  const { id } = await params;\r\n\r\n  const memeId = Array.isArray(id) ? id[0] : id;\r\n\r\n  const meme = await getMeme(memeId || '');\r\n\r\n  return <MemeItem meme={meme} />;\r\n}\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;AAAA;;;;AAGO,MAAM,gBAAgB;AAEd,eAAe,KAAK,EAAE,MAAM,EAAsB;IAC/D,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM;IAErB,MAAM,SAAS,MAAM,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,GAAG;IAE3C,MAAM,OAAO,MAAM,CAAA,GAAA,6HAAA,CAAA,UAAO,AAAD,EAAE,UAAU;IAErC,qBAAO,8OAAC,0IAAA,CAAA,UAAQ;QAAC,MAAM;;;;;;AACzB","debugId":null}}]
}