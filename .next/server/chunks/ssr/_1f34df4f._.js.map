{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 32, "column": 0}, "map": {"version":3,"sources":["file://C%3A/ab3/New%20folder/LEIME/src/components/Home/Home.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Home = registerClientReference(\n    function() { throw new Error(\"Attempted to call Home() from the server but Home is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/Home/Home.tsx <module evaluation>\",\n    \"Home\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,OAAO,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACtC;IAAa,MAAM,IAAI,MAAM;AAAwN,GACrP,8DACA","debugId":null}},
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":["file://C%3A/ab3/New%20folder/LEIME/src/components/Home/Home.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Home = registerClientReference(\n    function() { throw new Error(\"Attempted to call Home() from the server but Home is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/Home/Home.tsx\",\n    \"Home\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,OAAO,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACtC;IAAa,MAAM,IAAI,MAAM;AAAwN,GACrP,0CACA","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"sources":["file://C%3A/ab3/New%20folder/LEIME/src/graphql/client.ts"],"sourcesContent":["import { ApolloClient, InMemoryCache } from '@apollo/client';\r\n\r\nconst client = new ApolloClient({\r\n  uri: `${process.env.HOST}/api/graphql`,\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nexport default client;\r\n"],"names":[],"mappings":";;;AAAA;AAAA;;AAEA,MAAM,SAAS,IAAI,0KAAA,CAAA,eAAY,CAAC;IAC9B,KAAK,GAAG,QAAQ,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;IACtC,OAAO,IAAI,wKAAA,CAAA,gBAAa;AAC1B;uCAEe","debugId":null}},
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":["file://C%3A/ab3/New%20folder/LEIME/src/graphql/meme/fragments.ts"],"sourcesContent":["import { gql } from '@apollo/client';\r\n\r\nexport const MEME_FRAGMENT = gql`\r\n  fragment MemeFragment on Meme {\r\n    id\r\n    title\r\n    imgUrl\r\n    likes\r\n    timestamp\r\n  }\r\n`;\r\n"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,gBAAgB,8IAAA,CAAA,MAAG,CAAC;;;;;;;;AAQjC,CAAC","debugId":null}},
    {"offset": {"line": 107, "column": 0}, "map": {"version":3,"sources":["file://C%3A/ab3/New%20folder/LEIME/src/graphql/meme/queries.ts"],"sourcesContent":["import { gql } from '@apollo/client';\r\nimport { MEME_FRAGMENT } from './fragments';\r\n\r\nexport const GET_MEMES = gql`\r\n  query GetMemes {\r\n    memes {\r\n      ...MemeFragment\r\n    }\r\n  }\r\n  ${MEME_FRAGMENT}\r\n`;\r\n\r\nexport const GET_MEME = gql`\r\n  query GetMeme($id: ID!) {\r\n    meme(id: $id) {\r\n      ...MemeFragment\r\n    }\r\n  }\r\n  ${MEME_FRAGMENT}\r\n`;\r\n\r\nexport const UPDATE_MEME = gql`\r\n  mutation UpdateMeme($id: ID!, $data: MemeInput!) {\r\n    updateMeme(id: $id, data: $data) {\r\n      ...MemeFragment\r\n    }\r\n  }\r\n  ${MEME_FRAGMENT}\r\n`;\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;;;AAEO,MAAM,YAAY,8IAAA,CAAA,MAAG,CAAC;;;;;;EAM3B,EAAE,mIAAA,CAAA,gBAAa,CAAC;AAClB,CAAC;AAEM,MAAM,WAAW,8IAAA,CAAA,MAAG,CAAC;;;;;;EAM1B,EAAE,mIAAA,CAAA,gBAAa,CAAC;AAClB,CAAC;AAEM,MAAM,cAAc,8IAAA,CAAA,MAAG,CAAC;;;;;;EAM7B,EAAE,mIAAA,CAAA,gBAAa,CAAC;AAClB,CAAC","debugId":null}},
    {"offset": {"line": 146, "column": 0}, "map": {"version":3,"sources":["file://C%3A/ab3/New%20folder/LEIME/src/graphql/meme/api.ts"],"sourcesContent":["import client from '../client';\r\nimport { Meme } from 'types/meme.type';\r\nimport { GET_MEME, GET_MEMES, UPDATE_MEME } from './queries';\r\n\r\nexport const getMemes = async () => {\r\n  const res = await client.query<{ memes: Meme[] }>({\r\n    query: GET_MEMES,\r\n  });\r\n\r\n  return res.data.memes;\r\n};\r\n\r\nexport const getMeme = async (id: string) => {\r\n  const res = await client.query<{ meme: Meme }>({\r\n    query: GET_MEME,\r\n    variables: { id },\r\n  });\r\n\r\n  return res.data.meme;\r\n};\r\n\r\nexport const updateMeme = async (id: string, meme: Omit<Meme, 'timestamp' | 'id'>) => {\r\n  const res = await client.mutate({\r\n    mutation: UPDATE_MEME,\r\n    variables: { id, data: meme },\r\n  });\r\n\r\n  return res.data.updateMeme;\r\n};\r\n"],"names":[],"mappings":";;;;;AAAA;AAEA;;;AAEO,MAAM,WAAW;IACtB,MAAM,MAAM,MAAM,wHAAA,CAAA,UAAM,CAAC,KAAK,CAAoB;QAChD,OAAO,iIAAA,CAAA,YAAS;IAClB;IAEA,OAAO,IAAI,IAAI,CAAC,KAAK;AACvB;AAEO,MAAM,UAAU,OAAO;IAC5B,MAAM,MAAM,MAAM,wHAAA,CAAA,UAAM,CAAC,KAAK,CAAiB;QAC7C,OAAO,iIAAA,CAAA,WAAQ;QACf,WAAW;YAAE;QAAG;IAClB;IAEA,OAAO,IAAI,IAAI,CAAC,IAAI;AACtB;AAEO,MAAM,aAAa,OAAO,IAAY;IAC3C,MAAM,MAAM,MAAM,wHAAA,CAAA,UAAM,CAAC,MAAM,CAAC;QAC9B,UAAU,iIAAA,CAAA,cAAW;QACrB,WAAW;YAAE;YAAI,MAAM;QAAK;IAC9B;IAEA,OAAO,IAAI,IAAI,CAAC,UAAU;AAC5B","debugId":null}},
    {"offset": {"line": 186, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file://C%3A/ab3/New%20folder/LEIME/src/hocs/withMemes.tsx"],"sourcesContent":["import { getMemes } from '@graphql/meme';\r\nimport React from 'react';\r\nimport { Meme } from 'types';\r\n\r\ntype WithMemesProps = {\r\n  memes: Meme[];\r\n};\r\n\r\nexport const withMemes = <P extends object>(Component: React.ComponentType<P & WithMemesProps>) => {\r\n  return async function WrappedComponent(props: P) {\r\n    const memes = await getMemes();\r\n\r\n    return (\r\n      <Component\r\n        {...props}\r\n        memes={memes}\r\n      />\r\n    );\r\n  };\r\n};\r\n"],"names":[],"mappings":";;;;AAAA;AAAA;;;AAQO,MAAM,YAAY,CAAmB;IAC1C,OAAO,eAAe,iBAAiB,KAAQ;QAC7C,MAAM,QAAQ,MAAM,CAAA,GAAA,6HAAA,CAAA,WAAQ,AAAD;QAE3B,qBACE,8OAAC;YACE,GAAG,KAAK;YACT,OAAO;;;;;;IAGb;AACF","debugId":null}},
    {"offset": {"line": 234, "column": 0}, "map": {"version":3,"sources":["file://C%3A/ab3/New%20folder/LEIME/src/app/page.tsx"],"sourcesContent":["import { Home } from '@components/Home/Home';\r\nimport { withMemes } from 'hocs/withMemes';\r\n\r\nexport default withMemes(Home);\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;uCAEe,CAAA,GAAA,yHAAA,CAAA,YAAS,AAAD,EAAE,kIAAA,CAAA,OAAI","debugId":null}}]
}