{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/ab3/rest-client-app/src/ui/Skeletons/TableSkeleton.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { FC } from 'react';\r\nimport Skeleton from 'react-loading-skeleton';\r\nimport 'react-loading-skeleton/dist/skeleton.css';\r\nimport { range } from 'underscore';\r\n\r\ninterface Props {\r\n  colCount: number;\r\n  rowsCount: number;\r\n}\r\n\r\nexport const TableSkeleton: FC<Props> = ({ colCount, rowsCount }) => {\r\n  const columns = range(colCount).map((i) => {\r\n    return (\r\n      <th\r\n        key={i}\r\n        className=\"p-2\"\r\n      >\r\n        <Skeleton height={50} />\r\n      </th>\r\n    );\r\n  });\r\n\r\n  const rowColumns = range(colCount).map((i) => (\r\n    <td\r\n      key={i}\r\n      className=\"px-1\"\r\n    >\r\n      <Skeleton height={50} />\r\n    </td>\r\n  ));\r\n\r\n  const rows = range(rowsCount).map((i) => (\r\n    <tr\r\n      key={i}\r\n      className=\"px-1\"\r\n    >\r\n      {rowColumns}\r\n    </tr>\r\n  ));\r\n\r\n  return (\r\n    <table width=\"100%\">\r\n      <thead>\r\n        <tr>{columns}</tr>\r\n      </thead>\r\n      <tbody>{rows}</tbody>\r\n    </table>\r\n  );\r\n};\r\n"],"names":[],"mappings":";;;;AAGA;AAEA;AAAA;AALA;;;;;AAYO,MAAM,gBAA2B,CAAC,EAAE,QAAQ,EAAE,SAAS,EAAE;IAC9D,MAAM,UAAU,CAAA,GAAA,qLAAA,CAAA,QAAK,AAAD,EAAE,UAAU,GAAG,CAAC,CAAC;QACnC,qBACE,6LAAC;YAEC,WAAU;sBAEV,cAAA,6LAAC,gKAAA,CAAA,UAAQ;gBAAC,QAAQ;;;;;;WAHb;;;;;IAMX;IAEA,MAAM,aAAa,CAAA,GAAA,qLAAA,CAAA,QAAK,AAAD,EAAE,UAAU,GAAG,CAAC,CAAC,kBACtC,6LAAC;YAEC,WAAU;sBAEV,cAAA,6LAAC,gKAAA,CAAA,UAAQ;gBAAC,QAAQ;;;;;;WAHb;;;;;IAOT,MAAM,OAAO,CAAA,GAAA,qLAAA,CAAA,QAAK,AAAD,EAAE,WAAW,GAAG,CAAC,CAAC,kBACjC,6LAAC;YAEC,WAAU;sBAET;WAHI;;;;;IAOT,qBACE,6LAAC;QAAM,OAAM;;0BACX,6LAAC;0BACC,cAAA,6LAAC;8BAAI;;;;;;;;;;;0BAEP,6LAAC;0BAAO;;;;;;;;;;;;AAGd;KAtCa","debugId":null}}]
}