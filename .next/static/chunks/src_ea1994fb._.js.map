{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/ab3/New%20folder/LEIME/src/ui/Link/Link.tsx"],"sourcesContent":["import Link from 'next/link';\r\nimport { FC } from 'react';\r\n\r\ninterface Props {\r\n  href: string;\r\n  label: string;\r\n  target?: '_blank' | '_self' | '_parent' | '_top' | 'framename';\r\n}\r\n\r\nexport const CustomLink: FC<Props> = ({ href, label, target = '_self' }) => (\r\n  <Link\r\n    className=\"text-state-600 hover:text-fuchsia-400 font-bold\"\r\n    href={href}\r\n    target={target}\r\n  >\r\n    {label}\r\n  </Link>\r\n);\r\n"],"names":[],"mappings":";;;;AAAA;;;AASO,MAAM,aAAwB,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,OAAO,EAAE,iBACrE,6LAAC,+JAAA,CAAA,UAAI;QACH,WAAU;QACV,MAAM;QACN,QAAQ;kBAEP;;;;;;KANQ","debugId":null}},
    {"offset": {"line": 36, "column": 0}, "map": {"version":3,"sources":["file://C%3A/ab3/New%20folder/LEIME/src/ui/Modal/Modal.tsx"],"sourcesContent":["import { Modal, ModalContent, ModalHeader, ModalBody } from '@heroui/react';\r\nimport { FC, ReactNode } from 'react';\r\n\r\ninterface Props {\r\n  children: ReactNode;\r\n  isOpen: boolean;\r\n  title: string;\r\n  onOpenChange: () => void;\r\n}\r\n\r\nexport const CustomModal: FC<Props> = ({ children, isOpen, onOpenChange, title }) => {\r\n  return (\r\n    <Modal\r\n      isOpen={isOpen}\r\n      onOpenChange={onOpenChange}\r\n      className=\"bg-black/70 text-white\"\r\n    >\r\n      <ModalContent>\r\n        <ModalHeader className=\"flex flex-col gap-1\">{title}</ModalHeader>\r\n        <ModalBody>{children}</ModalBody>\r\n      </ModalContent>\r\n    </Modal>\r\n  );\r\n};\r\n"],"names":[],"mappings":";;;;AAAA;AAAA;AAAA;AAAA;;;AAUO,MAAM,cAAyB,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,YAAY,EAAE,KAAK,EAAE;IAC9E,qBACE,6LAAC,4MAAA,CAAA,QAAK;QACJ,QAAQ;QACR,cAAc;QACd,WAAU;kBAEV,cAAA,6LAAC,2NAAA,CAAA,eAAY;;8BACX,6LAAC,yNAAA,CAAA,cAAW;oBAAC,WAAU;8BAAuB;;;;;;8BAC9C,6LAAC,qNAAA,CAAA,YAAS;8BAAE;;;;;;;;;;;;;;;;;AAIpB;KAba","debugId":null}},
    {"offset": {"line": 92, "column": 0}, "map": {"version":3,"sources":["file://C%3A/ab3/New%20folder/LEIME/src/ui/Inputs/LabeledInput.tsx"],"sourcesContent":["import { Input } from '@heroui/react';\r\nimport { memo } from 'react';\r\nimport { FieldValues, Path, UseFormRegister } from 'react-hook-form';\r\n\r\ninterface Props<T extends FieldValues> {\r\n  name: Path<T>;\r\n  label: string;\r\n  register: UseFormRegister<T>;\r\n  err: string;\r\n  type?: string;\r\n  placeholder?: string;\r\n  isValid?: boolean;\r\n  defaultValue?: string;\r\n}\r\nconst LabeledInputComponent = <T extends FieldValues>(props: Props<T>) => {\r\n  const { name, label, register, type = 'text', err, defaultValue = '', placeholder = '' } = props;\r\n\r\n  return (\r\n    <div className=\"flex flex-col gap-1 pb-4 w-full\">\r\n      <label\r\n        htmlFor={name}\r\n        className=\"pl-1 text-sm font-medium text-gray-700 dark:text-gray-300\"\r\n      >\r\n        {label}\r\n      </label>\r\n      <Input\r\n        id={name}\r\n        isInvalid={!!err}\r\n        {...(register ? register(name) : { name })}\r\n        type={type}\r\n        defaultValue={defaultValue}\r\n        placeholder={placeholder}\r\n        className=\"text-gray-800 dark:text-white rounded\"\r\n        errorMessage={err}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const LabeledInput = memo(LabeledInputComponent) as <T extends FieldValues>(props: Props<T>) => React.ReactNode;\r\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAaA,MAAM,wBAAwB,CAAwB;IACpD,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,MAAM,EAAE,GAAG,EAAE,eAAe,EAAE,EAAE,cAAc,EAAE,EAAE,GAAG;IAE3F,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBACC,SAAS;gBACT,WAAU;0BAET;;;;;;0BAEH,6LAAC,4MAAA,CAAA,QAAK;gBACJ,IAAI;gBACJ,WAAW,CAAC,CAAC;gBACZ,GAAI,WAAW,SAAS,QAAQ;oBAAE;gBAAK,CAAC;gBACzC,MAAM;gBACN,cAAc;gBACd,aAAa;gBACb,WAAU;gBACV,cAAc;;;;;;;;;;;;AAItB;KAvBM;AAyBC,MAAM,6BAAe,CAAA,GAAA,6JAAA,CAAA,OAAI,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 153, "column": 0}, "map": {"version":3,"sources":["file://C%3A/ab3/New%20folder/LEIME/src/graphql/client.ts"],"sourcesContent":["import { ApolloClient, InMemoryCache } from '@apollo/client';\r\n\r\nconst client = new ApolloClient({\r\n  uri: `${process.env.HOST}/api/graphql`,\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nexport default client;\r\n"],"names":[],"mappings":";;;AAGU;AAHV;AAAA;;AAEA,MAAM,SAAS,IAAI,6KAAA,CAAA,eAAY,CAAC;IAC9B,KAAK,GAAG,gKAAA,CAAA,UAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;IACtC,OAAO,IAAI,2KAAA,CAAA,gBAAa;AAC1B;uCAEe","debugId":null}},
    {"offset": {"line": 174, "column": 0}, "map": {"version":3,"sources":["file://C%3A/ab3/New%20folder/LEIME/src/graphql/meme/fragments.ts"],"sourcesContent":["import { gql } from '@apollo/client';\r\n\r\nexport const MEME_FRAGMENT = gql`\r\n  fragment MemeFragment on Meme {\r\n    id\r\n    title\r\n    imgUrl\r\n    likes\r\n    timestamp\r\n  }\r\n`;\r\n"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,gBAAgB,iJAAA,CAAA,MAAG,CAAC;;;;;;;;AAQjC,CAAC","debugId":null}},
    {"offset": {"line": 197, "column": 0}, "map": {"version":3,"sources":["file://C%3A/ab3/New%20folder/LEIME/src/graphql/meme/queries.ts"],"sourcesContent":["import { gql } from '@apollo/client';\r\nimport { MEME_FRAGMENT } from './fragments';\r\n\r\nexport const GET_MEMES = gql`\r\n  query GetMemes {\r\n    memes {\r\n      ...MemeFragment\r\n    }\r\n  }\r\n  ${MEME_FRAGMENT}\r\n`;\r\n\r\nexport const GET_MEME = gql`\r\n  query GetMeme($id: ID!) {\r\n    meme(id: $id) {\r\n      ...MemeFragment\r\n    }\r\n  }\r\n  ${MEME_FRAGMENT}\r\n`;\r\n\r\nexport const UPDATE_MEME = gql`\r\n  mutation UpdateMeme($id: ID!, $data: MemeInput!) {\r\n    updateMeme(id: $id, data: $data) {\r\n      ...MemeFragment\r\n    }\r\n  }\r\n  ${MEME_FRAGMENT}\r\n`;\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;;;AAEO,MAAM,YAAY,iJAAA,CAAA,MAAG,CAAC;;;;;;EAM3B,EAAE,sIAAA,CAAA,gBAAa,CAAC;AAClB,CAAC;AAEM,MAAM,WAAW,iJAAA,CAAA,MAAG,CAAC;;;;;;EAM1B,EAAE,sIAAA,CAAA,gBAAa,CAAC;AAClB,CAAC;AAEM,MAAM,cAAc,iJAAA,CAAA,MAAG,CAAC;;;;;;EAM7B,EAAE,sIAAA,CAAA,gBAAa,CAAC;AAClB,CAAC","debugId":null}},
    {"offset": {"line": 239, "column": 0}, "map": {"version":3,"sources":["file://C%3A/ab3/New%20folder/LEIME/src/graphql/meme/api.ts"],"sourcesContent":["import client from '../client';\r\nimport { Meme } from 'types/meme.type';\r\nimport { GET_MEME, GET_MEMES, UPDATE_MEME } from './queries';\r\n\r\nexport const getMemes = async () => {\r\n  const res = await client.query<{ memes: Meme[] }>({\r\n    query: GET_MEMES,\r\n  });\r\n\r\n  return res.data.memes;\r\n};\r\n\r\nexport const getMeme = async (id: string) => {\r\n  const res = await client.query<{ meme: Meme }>({\r\n    query: GET_MEME,\r\n    variables: { id },\r\n  });\r\n\r\n  return res.data.meme;\r\n};\r\n\r\nexport const updateMeme = async (id: string, meme: Omit<Meme, 'timestamp' | 'id'>) => {\r\n  const res = await client.mutate({\r\n    mutation: UPDATE_MEME,\r\n    variables: { id, data: meme },\r\n  });\r\n\r\n  return res.data.updateMeme;\r\n};\r\n"],"names":[],"mappings":";;;;;AAAA;AAEA;;;AAEO,MAAM,WAAW;IACtB,MAAM,MAAM,MAAM,2HAAA,CAAA,UAAM,CAAC,KAAK,CAAoB;QAChD,OAAO,oIAAA,CAAA,YAAS;IAClB;IAEA,OAAO,IAAI,IAAI,CAAC,KAAK;AACvB;AAEO,MAAM,UAAU,OAAO;IAC5B,MAAM,MAAM,MAAM,2HAAA,CAAA,UAAM,CAAC,KAAK,CAAiB;QAC7C,OAAO,oIAAA,CAAA,WAAQ;QACf,WAAW;YAAE;QAAG;IAClB;IAEA,OAAO,IAAI,IAAI,CAAC,IAAI;AACtB;AAEO,MAAM,aAAa,OAAO,IAAY;IAC3C,MAAM,MAAM,MAAM,2HAAA,CAAA,UAAM,CAAC,MAAM,CAAC;QAC9B,UAAU,oIAAA,CAAA,cAAW;QACrB,WAAW;YAAE;YAAI,MAAM;QAAK;IAC9B;IAEA,OAAO,IAAI,IAAI,CAAC,UAAU;AAC5B","debugId":null}},
    {"offset": {"line": 282, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 306, "column": 0}, "map": {"version":3,"sources":["file://C%3A/ab3/New%20folder/LEIME/src/utils/isImage.ts"],"sourcesContent":["export const isImage = (url: string) =>\r\n  new Promise<boolean>((resolve) => {\r\n    const img = new Image();\r\n\r\n    img.onload = () => resolve(true);\r\n    img.onerror = () => resolve(false);\r\n    img.src = url;\r\n  });\r\n"],"names":[],"mappings":";;;AAAO,MAAM,UAAU,CAAC,MACtB,IAAI,QAAiB,CAAC;QACpB,MAAM,MAAM,IAAI;QAEhB,IAAI,MAAM,GAAG,IAAM,QAAQ;QAC3B,IAAI,OAAO,GAAG,IAAM,QAAQ;QAC5B,IAAI,GAAG,GAAG;IACZ","debugId":null}},
    {"offset": {"line": 324, "column": 0}, "map": {"version":3,"sources":["file://C%3A/ab3/New%20folder/LEIME/src/utils/validation/imgUrl.ts"],"sourcesContent":["import { isImage } from '@utils/isImage';\r\nimport * as yup from 'yup';\r\n\r\nexport const imgUrlValidation = yup\r\n  .string()\r\n  // .url('Must be a valid URL')\r\n  .matches(/\\.(jpe?g)$/i, 'Image must be a JPG or JPEG')\r\n  .test('is-image', 'URL does not point to a valid image', async (value) => {\r\n    if (!value) return false;\r\n    const isValid = await isImage(value);\r\n\r\n    return isValid;\r\n  })\r\n  .required('Image URL is required');\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,MAAM,mBAAmB,CAAA,GAAA,sIAAA,CAAA,SACvB,AAAD,GACN,8BAA8B;CAC7B,OAAO,CAAC,eAAe,+BACvB,IAAI,CAAC,YAAY,uCAAuC,OAAO;IAC9D,IAAI,CAAC,OAAO,OAAO;IACnB,MAAM,UAAU,MAAM,CAAA,GAAA,0HAAA,CAAA,UAAO,AAAD,EAAE;IAE9B,OAAO;AACT,GACC,QAAQ,CAAC","debugId":null}},
    {"offset": {"line": 346, "column": 0}, "map": {"version":3,"sources":["file://C%3A/ab3/New%20folder/LEIME/src/utils/validation/likes.ts"],"sourcesContent":["import * as yup from 'yup';\r\n\r\nconst MIN_LENGTH = 0;\r\nconst MAX_LENGTH = 99;\r\n\r\nexport const likesValidation = yup\r\n  .number()\r\n  .typeError('Must be a number')\r\n  .required('Likes are required')\r\n  .min(MIN_LENGTH, `Should contain at least ${MIN_LENGTH} likes`)\r\n  .max(MAX_LENGTH, `Max contain ${MAX_LENGTH} likes`);\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,aAAa;AACnB,MAAM,aAAa;AAEZ,MAAM,kBAAkB,CAAA,GAAA,sIAAA,CAAA,SACtB,AAAD,IACL,SAAS,CAAC,oBACV,QAAQ,CAAC,sBACT,GAAG,CAAC,YAAY,CAAC,wBAAwB,EAAE,WAAW,MAAM,CAAC,EAC7D,GAAG,CAAC,YAAY,CAAC,YAAY,EAAE,WAAW,MAAM,CAAC","debugId":null}},
    {"offset": {"line": 363, "column": 0}, "map": {"version":3,"sources":["file://C%3A/ab3/New%20folder/LEIME/src/utils/validation/title.ts"],"sourcesContent":["import * as yup from 'yup';\r\n\r\nconst MIN_LENGTH = 3;\r\nconst MAX_LENGTH = 100;\r\n\r\nexport const titleValidation = yup\r\n  .string()\r\n  .trim()\r\n  .required('Title is required')\r\n  .min(MIN_LENGTH, `Should contain at least ${MIN_LENGTH} symbols`)\r\n  .min(MIN_LENGTH, `Max contain ${MAX_LENGTH} symbols`);\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,aAAa;AACnB,MAAM,aAAa;AAEZ,MAAM,kBAAkB,CAAA,GAAA,sIAAA,CAAA,SACtB,AAAD,IACL,IAAI,GACJ,QAAQ,CAAC,qBACT,GAAG,CAAC,YAAY,CAAC,wBAAwB,EAAE,WAAW,QAAQ,CAAC,EAC/D,GAAG,CAAC,YAAY,CAAC,YAAY,EAAE,WAAW,QAAQ,CAAC","debugId":null}},
    {"offset": {"line": 380, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 404, "column": 0}, "map": {"version":3,"sources":["file://C%3A/ab3/New%20folder/LEIME/src/utils/schemas/memeSchema.ts"],"sourcesContent":["import { imgUrlValidation, likesValidation, titleValidation } from '@utils/validation';\r\nimport * as yup from 'yup';\r\n\r\nexport const memeSchema = yup.object().shape({\r\n  title: titleValidation,\r\n  imgUrl: imgUrlValidation,\r\n  likes: likesValidation,\r\n});\r\n"],"names":[],"mappings":";;;AAAA;AAAA;AAAA;AAAA;AACA;;;AAEO,MAAM,aAAa,CAAA,GAAA,sIAAA,CAAA,SAAU,AAAD,IAAI,KAAK,CAAC;IAC3C,OAAO,sIAAA,CAAA,kBAAe;IACtB,QAAQ,uIAAA,CAAA,mBAAgB;IACxB,OAAO,sIAAA,CAAA,kBAAe;AACxB","debugId":null}},
    {"offset": {"line": 428, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 448, "column": 0}, "map": {"version":3,"sources":["file://C%3A/ab3/New%20folder/LEIME/src/ui/Buttons/MainButton.tsx"],"sourcesContent":["import { Button } from '@heroui/react';\r\nimport { FC } from 'react';\r\nimport clsx from 'clsx';\r\n\r\ninterface Props {\r\n  type: 'button' | 'submit' | 'reset';\r\n  label: string;\r\n  px?: number;\r\n  auto?: boolean;\r\n  onClick?: () => void;\r\n}\r\n\r\nexport const MainButton: FC<Props> = ({ type, label, px = 50, auto = false, onClick = () => {} }) => (\r\n  <Button\r\n    type={type}\r\n    onPress={onClick}\r\n    className={clsx(\r\n      'bg-stone-800 hover:bg-fuchsia-400 font-bold rounded-2xl text-white',\r\n      `px-[${px}px]`,\r\n      auto && 'mx-auto block',\r\n    )}\r\n  >\r\n    {label}\r\n  </Button>\r\n);\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAUO,MAAM,aAAwB,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,OAAO,KAAK,EAAE,UAAU,KAAO,CAAC,EAAE,iBAC9F,6LAAC,+MAAA,CAAA,SAAM;QACL,MAAM;QACN,SAAS;QACT,WAAW,CAAA,GAAA,wIAAA,CAAA,UAAI,AAAD,EACZ,sEACA,CAAC,IAAI,EAAE,GAAG,GAAG,CAAC,EACd,QAAQ;kBAGT;;;;;;KAVQ","debugId":null}},
    {"offset": {"line": 479, "column": 0}, "map": {"version":3,"sources":["file://C%3A/ab3/New%20folder/LEIME/src/styles/index.ts"],"sourcesContent":["export const buttonStyles = 'bg-fuchsia-500 hover:bg-fuchsia-400 font-bold rounded-2xl text-white';\r\n"],"names":[],"mappings":";;;AAAO,MAAM,eAAe","debugId":null}},
    {"offset": {"line": 492, "column": 0}, "map": {"version":3,"sources":["file://C%3A/ab3/New%20folder/LEIME/src/components/MemesForm/MemesForm.tsx"],"sourcesContent":["import { Button, Form } from '@heroui/react';\r\nimport { LabeledInput } from '@ui/Inputs/LabeledInput';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { SubmitHandler, useForm } from 'react-hook-form';\r\nimport { Meme } from 'types';\r\nimport { updateMeme } from '@graphql/meme';\r\nimport { FC } from 'react';\r\nimport { memeSchema } from '@utils/schemas';\r\nimport { MainButton } from '@ui/Buttons/MainButton';\r\nimport clsx from 'clsx';\r\nimport { buttonStyles } from 'styles';\r\n\r\ninterface Props {\r\n  meme: Meme;\r\n}\r\n\r\nexport const MemesForm: FC<Props> = ({ meme }) => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm<Pick<Meme, 'title' | 'imgUrl' | 'likes'>>({\r\n    resolver: yupResolver(memeSchema),\r\n    mode: 'onChange',\r\n  });\r\n\r\n  const onSubmit: SubmitHandler<Pick<Meme, 'title' | 'imgUrl' | 'likes'>> = async ({ title, imgUrl, likes }) => {\r\n    const updatedMeme = await updateMeme(meme.id, { title, imgUrl, likes });\r\n\r\n    if (updatedMeme) {\r\n      reset();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      className=\"w-full max-w-md space-y-4 p-4 bg-white dark:bg-gray-900 rounded-xl shadow-lg mb-5\"\r\n      onSubmit={handleSubmit(onSubmit)}\r\n    >\r\n      <LabeledInput\r\n        name=\"title\"\r\n        label=\"Meme Title\"\r\n        placeholder=\"Enter title\"\r\n        register={register}\r\n        err={errors.title?.message || ''}\r\n        defaultValue={meme.title}\r\n      />\r\n      <LabeledInput\r\n        name=\"imgUrl\"\r\n        label=\"Meme Image\"\r\n        placeholder=\"Enter image URL\"\r\n        register={register}\r\n        defaultValue={meme.imgUrl}\r\n        err={errors.imgUrl?.message || ''}\r\n      />\r\n      <LabeledInput\r\n        name=\"likes\"\r\n        label=\"Likes\"\r\n        placeholder=\"Enter number of likes\"\r\n        register={register}\r\n        type=\"number\"\r\n        defaultValue={String(meme.likes)}\r\n        err={errors.likes?.message || ''}\r\n      />\r\n\r\n      <Button\r\n        type=\"submit\"\r\n        className={clsx(buttonStyles)}\r\n      >\r\n        Submit\r\n      </Button>\r\n\r\n      <MainButton\r\n        label=\"Submit\"\r\n        type=\"submit\"\r\n        auto\r\n      />\r\n    </Form>\r\n  );\r\n};\r\n"],"names":[],"mappings":";;;;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;AAMO,MAAM,YAAuB,CAAC,EAAE,IAAI,EAAE;;IAC3C,MAAM,EACJ,QAAQ,EACR,YAAY,EACZ,KAAK,EACL,WAAW,EAAE,MAAM,EAAE,EACtB,GAAG,CAAA,GAAA,iKAAA,CAAA,UAAO,AAAD,EAA4C;QACpD,UAAU,CAAA,GAAA,iKAAA,CAAA,cAAW,AAAD,EAAE,wIAAA,CAAA,aAAU;QAChC,MAAM;IACR;IAEA,MAAM,WAAoE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE;QACvG,MAAM,cAAc,MAAM,CAAA,GAAA,gIAAA,CAAA,aAAU,AAAD,EAAE,KAAK,EAAE,EAAE;YAAE;YAAO;YAAQ;QAAM;QAErE,IAAI,aAAa;YACf;QACF;IACF;IAEA,qBACE,6LAAC,iKAAA,CAAA,OAAI;QACH,WAAU;QACV,UAAU,aAAa;;0BAEvB,6LAAC,uIAAA,CAAA,eAAY;gBACX,MAAK;gBACL,OAAM;gBACN,aAAY;gBACZ,UAAU;gBACV,KAAK,OAAO,KAAK,EAAE,WAAW;gBAC9B,cAAc,KAAK,KAAK;;;;;;0BAE1B,6LAAC,uIAAA,CAAA,eAAY;gBACX,MAAK;gBACL,OAAM;gBACN,aAAY;gBACZ,UAAU;gBACV,cAAc,KAAK,MAAM;gBACzB,KAAK,OAAO,MAAM,EAAE,WAAW;;;;;;0BAEjC,6LAAC,uIAAA,CAAA,eAAY;gBACX,MAAK;gBACL,OAAM;gBACN,aAAY;gBACZ,UAAU;gBACV,MAAK;gBACL,cAAc,OAAO,KAAK,KAAK;gBAC/B,KAAK,OAAO,KAAK,EAAE,WAAW;;;;;;0BAGhC,6LAAC,+MAAA,CAAA,SAAM;gBACL,MAAK;gBACL,WAAW,CAAA,GAAA,wIAAA,CAAA,UAAI,AAAD,EAAE,yHAAA,CAAA,eAAY;0BAC7B;;;;;;0BAID,6LAAC,sIAAA,CAAA,aAAU;gBACT,OAAM;gBACN,MAAK;gBACL,IAAI;;;;;;;;;;;;AAIZ;GAhEa;;QAMP,iKAAA,CAAA,UAAO;;;KANA","debugId":null}},
    {"offset": {"line": 618, "column": 0}, "map": {"version":3,"sources":["file://C%3A/ab3/New%20folder/LEIME/src/components/MemeTable/MemeTable.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { Table, TableBody, TableRow, TableCell, TableHeader, TableColumn, Button, useDisclosure } from '@heroui/react';\r\nimport { CustomLink } from '@ui/Link/Link';\r\nimport { FC, useState } from 'react';\r\nimport { Meme } from 'types';\r\nimport { PencilIcon } from '@heroicons/react/24/solid';\r\nimport { CustomModal } from '@ui/Modal/Modal';\r\nimport { MemesForm } from '@components/MemesForm/MemesForm';\r\n\r\ninterface Props {\r\n  memes: Meme[];\r\n}\r\n\r\nconst headers = ['id', 'name', 'image', 'likes', 'actions'];\r\n\r\nexport const MemeTable: FC<Props> = ({ memes }) => {\r\n  const { isOpen, onOpenChange, onOpen } = useDisclosure();\r\n\r\n  const [selectedMeme, setSelectedMeme] = useState<Meme | null>(null);\r\n\r\n  return (\r\n    <>\r\n      <Table aria-label=\"Memes table\">\r\n        <TableHeader>\r\n          {headers.map((header) => (\r\n            <TableColumn\r\n              key={header}\r\n              className=\"uppercase text-center\"\r\n            >\r\n              {header}\r\n            </TableColumn>\r\n          ))}\r\n        </TableHeader>\r\n\r\n        <TableBody>\r\n          {memes.map((meme, i) => (\r\n            <TableRow key={meme.id}>\r\n              <TableCell className=\"text-center\">{i + 1}</TableCell>\r\n              <TableCell className=\"text-center whitespace-nowrap w-auto max-w-full\">{meme.title}</TableCell>\r\n              <TableCell className=\"text-center\">\r\n                <CustomLink\r\n                  href={meme.imgUrl}\r\n                  target=\"_blank\"\r\n                  label=\"Image\"\r\n                />\r\n              </TableCell>\r\n              <TableCell className=\"text-center\">{meme.likes}</TableCell>\r\n              <TableCell className=\"text-center\">\r\n                <Button\r\n                  onPress={() => {\r\n                    onOpen();\r\n                    setSelectedMeme(meme);\r\n                  }}\r\n                >\r\n                  <PencilIcon className=\"h-5 w-5 text-state-600 hover:text-fuchsia-400\" />\r\n                </Button>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n\r\n      {isOpen && selectedMeme && (\r\n        <CustomModal\r\n          isOpen={isOpen}\r\n          title=\"Edit Meme\"\r\n          onOpenChange={() => {\r\n            onOpenChange();\r\n            setSelectedMeme(null);\r\n          }}\r\n        >\r\n          <MemesForm meme={selectedMeme} />\r\n        </CustomModal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n"],"names":[],"mappings":";;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;;;AARA;;;;;;;AAcA,MAAM,UAAU;IAAC;IAAM;IAAQ;IAAS;IAAS;CAAU;AAEpD,MAAM,YAAuB,CAAC,EAAE,KAAK,EAAE;;IAC5C,MAAM,EAAE,MAAM,EAAE,YAAY,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,kKAAA,CAAA,gBAAa,AAAD;IAErD,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe;IAE9D,qBACE;;0BACE,6LAAC,4MAAA,CAAA,QAAK;gBAAC,cAAW;;kCAChB,6LAAC,yNAAA,CAAA,cAAW;kCACT,QAAQ,GAAG,CAAC,CAAC,uBACZ,6LAAC,yNAAA,CAAA,cAAW;gCAEV,WAAU;0CAET;+BAHI;;;;;;;;;;kCAQX,6LAAC,qNAAA,CAAA,YAAS;kCACP,MAAM,GAAG,CAAC,CAAC,MAAM,kBAChB,6LAAC,mNAAA,CAAA,WAAQ;;kDACP,6LAAC,qNAAA,CAAA,YAAS;wCAAC,WAAU;kDAAe,IAAI;;;;;;kDACxC,6LAAC,qNAAA,CAAA,YAAS;wCAAC,WAAU;kDAAmD,KAAK,KAAK;;;;;;kDAClF,6LAAC,qNAAA,CAAA,YAAS;wCAAC,WAAU;kDACnB,cAAA,6LAAC,6HAAA,CAAA,aAAU;4CACT,MAAM,KAAK,MAAM;4CACjB,QAAO;4CACP,OAAM;;;;;;;;;;;kDAGV,6LAAC,qNAAA,CAAA,YAAS;wCAAC,WAAU;kDAAe,KAAK,KAAK;;;;;;kDAC9C,6LAAC,qNAAA,CAAA,YAAS;wCAAC,WAAU;kDACnB,cAAA,6LAAC,+MAAA,CAAA,SAAM;4CACL,SAAS;gDACP;gDACA,gBAAgB;4CAClB;sDAEA,cAAA,6LAAC,oNAAA,CAAA,aAAU;gDAAC,WAAU;;;;;;;;;;;;;;;;;+BAlBb,KAAK,EAAE;;;;;;;;;;;;;;;;YA0B3B,UAAU,8BACT,6LAAC,+HAAA,CAAA,cAAW;gBACV,QAAQ;gBACR,OAAM;gBACN,cAAc;oBACZ;oBACA,gBAAgB;gBAClB;0BAEA,cAAA,6LAAC,+IAAA,CAAA,YAAS;oBAAC,MAAM;;;;;;;;;;;;;AAK3B;GA7Da;;QAC8B,kKAAA,CAAA,gBAAa;;;KAD3C","debugId":null}}]
}