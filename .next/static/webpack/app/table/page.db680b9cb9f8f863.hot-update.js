"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/table/page",{

/***/ "(app-pages-browser)/./src/graphql/meme/api.ts":
/*!*********************************!*\
  !*** ./src/graphql/meme/api.ts ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getMeme: () => (/* binding */ getMeme),\n/* harmony export */   getMemes: () => (/* binding */ getMemes),\n/* harmony export */   updateMeme: () => (/* binding */ updateMeme)\n/* harmony export */ });\n/* harmony import */ var _client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../client */ \"(app-pages-browser)/./src/graphql/client.ts\");\n/* harmony import */ var _queries__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./queries */ \"(app-pages-browser)/./src/graphql/meme/queries.ts\");\n\n\nconst getMemes = async ()=>{\n    const res = await _client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].query({\n        query: _queries__WEBPACK_IMPORTED_MODULE_1__.GET_MEMES\n    });\n    return res.data.memes;\n};\nconst getMeme = async (id)=>{\n    const res = await _client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].query({\n        query: _queries__WEBPACK_IMPORTED_MODULE_1__.GET_MEME,\n        variables: {\n            id\n        }\n    });\n    return res.data.meme;\n};\nconst updateMeme = async (id, meme)=>{\n    const res = await _client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].mutate({\n        mutation: _queries__WEBPACK_IMPORTED_MODULE_1__.UPDATE_MEME,\n        variables: {\n            id,\n            data: meme\n        }\n    });\n    return res.data.updateMeme;\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9ncmFwaHFsL21lbWUvYXBpLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQStCO0FBRThCO0FBRXRELE1BQU1JLFdBQVc7SUFDdEIsTUFBTUMsTUFBTSxNQUFNTCwrQ0FBTUEsQ0FBQ00sS0FBSyxDQUFvQjtRQUNoREEsT0FBT0osK0NBQVNBO0lBQ2xCO0lBRUEsT0FBT0csSUFBSUUsSUFBSSxDQUFDQyxLQUFLO0FBQ3ZCLEVBQUU7QUFFSyxNQUFNQyxVQUFVLE9BQU9DO0lBQzVCLE1BQU1MLE1BQU0sTUFBTUwsK0NBQU1BLENBQUNNLEtBQUssQ0FBaUI7UUFDN0NBLE9BQU9MLDhDQUFRQTtRQUNmVSxXQUFXO1lBQUVEO1FBQUc7SUFDbEI7SUFFQSxPQUFPTCxJQUFJRSxJQUFJLENBQUNLLElBQUk7QUFDdEIsRUFBRTtBQUVLLE1BQU1DLGFBQWEsT0FBT0gsSUFBWUU7SUFDM0MsTUFBTVAsTUFBTSxNQUFNTCwrQ0FBTUEsQ0FBQ2MsTUFBTSxDQUFDO1FBQzlCQyxVQUFVWixpREFBV0E7UUFDckJRLFdBQVc7WUFBRUQ7WUFBSUgsTUFBTUs7UUFBSztJQUM5QjtJQUVBLE9BQU9QLElBQUlFLElBQUksQ0FBQ00sVUFBVTtBQUM1QixFQUFFIiwic291cmNlcyI6WyJDOlxcYWIzXFxyZXN0LWNsaWVudC1hcHBcXHNyY1xcZ3JhcGhxbFxcbWVtZVxcYXBpLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjbGllbnQgZnJvbSAnLi4vY2xpZW50JztcclxuaW1wb3J0IHsgTWVtZSB9IGZyb20gJ3R5cGVzL21lbWUudHlwZSc7XHJcbmltcG9ydCB7IEdFVF9NRU1FLCBHRVRfTUVNRVMsIFVQREFURV9NRU1FIH0gZnJvbSAnLi9xdWVyaWVzJztcclxuXHJcbmV4cG9ydCBjb25zdCBnZXRNZW1lcyA9IGFzeW5jICgpID0+IHtcclxuICBjb25zdCByZXMgPSBhd2FpdCBjbGllbnQucXVlcnk8eyBtZW1lczogTWVtZVtdIH0+KHtcclxuICAgIHF1ZXJ5OiBHRVRfTUVNRVMsXHJcbiAgfSk7XHJcblxyXG4gIHJldHVybiByZXMuZGF0YS5tZW1lcztcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBnZXRNZW1lID0gYXN5bmMgKGlkOiBzdHJpbmcpID0+IHtcclxuICBjb25zdCByZXMgPSBhd2FpdCBjbGllbnQucXVlcnk8eyBtZW1lOiBNZW1lIH0+KHtcclxuICAgIHF1ZXJ5OiBHRVRfTUVNRSxcclxuICAgIHZhcmlhYmxlczogeyBpZCB9LFxyXG4gIH0pO1xyXG5cclxuICByZXR1cm4gcmVzLmRhdGEubWVtZTtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCB1cGRhdGVNZW1lID0gYXN5bmMgKGlkOiBzdHJpbmcsIG1lbWU6IE9taXQ8TWVtZSwgJ3RpbWVzdGFtcCcgfCAnaWQnPikgPT4ge1xyXG4gIGNvbnN0IHJlcyA9IGF3YWl0IGNsaWVudC5tdXRhdGUoe1xyXG4gICAgbXV0YXRpb246IFVQREFURV9NRU1FLFxyXG4gICAgdmFyaWFibGVzOiB7IGlkLCBkYXRhOiBtZW1lIH0sXHJcbiAgfSk7XHJcblxyXG4gIHJldHVybiByZXMuZGF0YS51cGRhdGVNZW1lO1xyXG59O1xyXG4iXSwibmFtZXMiOlsiY2xpZW50IiwiR0VUX01FTUUiLCJHRVRfTUVNRVMiLCJVUERBVEVfTUVNRSIsImdldE1lbWVzIiwicmVzIiwicXVlcnkiLCJkYXRhIiwibWVtZXMiLCJnZXRNZW1lIiwiaWQiLCJ2YXJpYWJsZXMiLCJtZW1lIiwidXBkYXRlTWVtZSIsIm11dGF0ZSIsIm11dGF0aW9uIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/graphql/meme/api.ts\n"));

/***/ })

});